@page "/vehiculodetalle/{idVehiculo:int}"
@attribute [Authorize(Roles = "propietario")]

@inject VehiculoService VehiculoService
@using PaseoExpressWebApp.Context;
@using PaseoExpressWebApp.Services;
@inject IDialogService Dialog

<PageTitle>Detalle del vehículo</PageTitle>

<MudBreadcrumbs Items="_items"></MudBreadcrumbs>

<MudCard Class="mb-5">
    <div class="p-3">
            <H5>Servicios</H5>
            <span>
                Aquí se detallan los mantenimientos dados al vehiculo.
            </span>

    </div>
        <MudCardContent>
            <MudTable Items="@servicios"  Height="500px" SortLabel="Sort By" Dense="true" Hover="true" Bordered="true" Striped="true" Breakpoint="Breakpoint.Sm" LoadingProgressColor="Color.Info" Virtualize="true" FixedHeader="true">
                <HeaderContent>
                    <MudTh>Título</MudTh>
                    <MudTh>Fecha de Servicio</MudTh>
                    <MudTh>Marca</MudTh>
                    <MudTh>Próximo Millaje</MudTh>
                    <MudTh>Ubicación en el Automóvil</MudTh>
                    <MudTh>Detalle</MudTh>
                </HeaderContent>
                <RowTemplate>
                 @*   <MudTd>
                        @if (!string.IsNullOrWhiteSpace(@context.Imagenes))
                        {
                            <img src="@context.Imagenes" alt="Imagen" width="50" height="50" />
                        }
                    </MudTd>*@
                    <MudTd>@context.Titulo</MudTd>
                    <MudTd>@context.FechaServicio.ToShortDateString()</MudTd>
                    <MudTd>@context.Marca</MudTd>
                    <MudTd>@context.ProximoMillaje</MudTd>
                    <MudTd>@context.UbicacionEnAutomovil</MudTd>
                    <MudTd>
                    <MudButton Class="bg-primario-oscuro" OnClick="@(() => OpenDialogAsync(_maxWidth, @context))">Mostrar</MudButton>
                    </MudTd>
                    </RowTemplate>
                <PagerContent>
                    <MudTablePager PageSizeOptions="new int[] { 10, 25, 50, 100, int.MaxValue }"
                               RowsPerPageString="@rowsPerPageString"
                               InfoFormat="@infoFormat"
                               AllItemsText="@allItemsText"
                               HorizontalAlignment="@horizontalAlignment"
                               HideRowsPerPage="@hideRowsPerPage"
                               HidePageNumber="@hidePageNumber"
                               HidePagination="@hidePagination" />
                </PagerContent>
                </MudTable>
            </MudCardContent>
        </MudCard>

    <MudCard Class="mb-5">
            <div class="p-3">
            <H5>Cuotas Diarias</H5>
            <P>
                Esta sección muestra la cuota diaria que se han pagado, incluyendo detalles sobre estos.
            </P>

            </div>
        <MudCardContent>
        <MudTable Items="@cuotaDiaria" SortLabel="Sort By" Dense="true" Hover="true" Bordered="true" Striped="true" Breakpoint="Breakpoint.Sm" LoadingProgressColor="Color.Info" Virtualize="true" FixedHeader="true">
                <HeaderContent>
                    <MudTh>Última Suma</MudTh>
                    <MudTh>Conductor</MudTh>
                    <MudTh>Tarifa Diaria</MudTh>
                    <MudTh>Tarifa Ahorro</MudTh>
                    <MudTh>Fecha Transacción</MudTh>
                    <MudTh>Comentario</MudTh>
                </HeaderContent>
                <RowTemplate>
                   @* <MudTd>
                        <img src="@context.Imagen" alt="Imagen" width="50" height="50" />
                    </MudTd>*@
                    <MudTd>@context.UltimaSuma</MudTd>
                    <MudTd>@context.Conductor</MudTd>
                    <MudTd>@context.TarifaDiaria.ToString()</MudTd>
                    <MudTd>@context.TarifaAhorro.ToString()</MudTd>
                    <MudTd>@context.FechaTransaccion.ToString("dd/MM/yyyy")</MudTd>
                    <MudTd>@context.Comentario</MudTd>
                </RowTemplate>
            <PagerContent>
                <MudTablePager PageSizeOptions="new int[] { 10, 25, 50, 100, int.MaxValue }"
                               RowsPerPageString="@rowsPerPageString"
                               InfoFormat="@infoFormat"
                               AllItemsText="@allItemsText"
                               HorizontalAlignment="@horizontalAlignment"
                               HideRowsPerPage="@hideRowsPerPage"
                               HidePageNumber="@hidePageNumber"
                               HidePagination="@hidePagination" />
            </PagerContent>
            </MudTable>
        </MudCardContent>
    </MudCard>



@code {
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; }
    private void Submit() => MudDialog.Close(DialogResult.Ok(true));
    private void Cancel() => MudDialog.Cancel();
    private readonly DialogOptions _maxWidth = new() { MaxWidth = MaxWidth.Medium, FullWidth = true };

    private HorizontalAlignment horizontalAlignment = HorizontalAlignment.Right;
    private bool hidePageNumber;
    private bool hidePagination;
    private bool hideRowsPerPage;
    private string rowsPerPageString = "Rows per page:";
    private string infoFormat = "{first_item}-{last_item} of {all_items}";
    private string allItemsText = "All";
    [Parameter]
    public int IdVehiculo { get; set; }

    private List<ObtenerTransaccionesPorVehiculoResult> cuotaDiaria;
    List<ObtenerServiciosPorVehiculoResult> servicios;
    

    protected override async Task OnInitializedAsync()
    {
        servicios = await VehiculoService.ObtenerServiciosPorVehiculoAsync(IdVehiculo);
        cuotaDiaria = await VehiculoService.ObtenerTransaccionesPorVehiculo(IdVehiculo);

        cuotaDiaria.OrderBy(x => x.FechaTransaccionHasta).ToList();
    }
    //Modal
    private Task OpenDialogAsync(DialogOptions options, ObtenerServiciosPorVehiculoResult servicio)
    {
        var parameters = new DialogParameters
        {
            { "servicio", servicio}
        };

        return Dialog.ShowAsync<ServiciosModal>(servicio.Titulo, parameters, options);
      
    }

    private List<BreadcrumbItem> _items = new List<BreadcrumbItem>
    {
        new BreadcrumbItem("Home", href: "/"),
        new BreadcrumbItem("Vehiculos", href: "/vehiculos"),
        new BreadcrumbItem("Detalle del Vehiculo", href: null, disabled: true),
    };
  
}
