@page "/Inicio"
@using Microsoft.AspNetCore.Authorization;
@attribute [Authorize(Roles = "Administrador")]

@using PaseoExpressWebApp.Context;
@using PaseoExpressWebApp.Models;
@using PaseoExpressWebApp.Services;
@using Microsoft.AspNetCore.SignalR.Client;
@using MudBlazor

@inject IJSRuntime JS
@inject TransaccionesService transaccionesService
@inject NavigationManager Navigation
@inject comprobantediarioservice ComprobanteDiarioService
@inject VehiculoService VehiculoService


<PageTitle>Home</PageTitle>


<div class="row">

    <div class="col-6">

@if(vehiculoInformacionDashboardResults != null){

            <MudCarousel Class="mud-width-full" @key="vehiculoInformacionDashboardResults.Count" Style="height:600px;" ShowArrows="@arrows" ShowBullets="@bullets" EnableSwipeGesture="@enableSwipeGesture" AutoCycle="@autocycle" TData="object">
@foreach (var item in vehiculoInformacionDashboardResults)
{

     <MudCarouselItem Transition="Transition.Slide" >


                <MudCard Class=" p-0">
                    <MudCardContent Class=" p-0">

<MudContainer  Class="pa-4">

            <img src="/img/@item.Imagen" alt="Lamborghini Aventador" height="200" />
    <!-- Tarjetas de Información -->
    <MudGrid Spacing="3" >
        <!-- Tarjeta de Nivel de Aceite -->
        <MudItem xs="12" md="6">
                                    <MudPaper Elevation="4" Class="pa-4 bg-primario-claro">
                 <MudGrid>
                                    <MudItem md="3">
                <MudIcon Icon="@Icons.Material.Outlined.WaterDrop"  />

                                    </MudItem>
                                    <MudItem md="9">
                                        <h4 class="m-0 h5  fw-bolder">Nivel Aceite</h4>
                                                <p class="fw-light">Motor</p>
                                    </MudItem>
                             </MudGrid>

                  
                <MudSlider Value="@item.PorcentajeDesgasteAceite" Color="Color.Default" Min="0" Max="100" Disabled="true" />
                <p class="m-0"><strong>Fecha:</strong> Nov 12-20</p>
                <p class="m-0"><strong>Marca:</strong> @item.Marca</p>
            </MudPaper>
        </MudItem>

        <!-- Tarjeta de Frenos (Combustible/Calor) -->
        <MudItem xs="12" md="6">
            <MudPaper Elevation="4" Class="pa-4 bg-primario-claro">
                             <MudGrid>
                                    <MudItem md="3">
                                        <MudIcon Icon="@Icons.Material.Outlined.Circle" />

                                    </MudItem>
                                    <MudItem md="9">
                                                <h4 class="m-0 h5  fw-bolder">Llantas</h4>
                                                <p class="fw-light">Delanteras</p>
                                    </MudItem>
                             </MudGrid>
                                        <div class="bg-primario-claro">

                                           <div class="text-center">

                                <MudProgressCircular Color="Color.Default" Size="Size.Medium" Value="@((double)@item.PorcentajeDesgasteLlanta1)" Class="mr-2" />
                                <MudProgressCircular Color="Color.Default" Size="Size.Medium" Value="@((double)@item.PorcentajeDesgasteLlanta2)" />
                                            <p class="m-0">Left @item.PorcentajeDesgasteLlanta1% | Right @item.PorcentajeDesgasteLlanta2%</p>
                             </div>
                                </div> 
            </MudPaper>
        </MudItem>

                <!-- Tarjeta de Frenos (Combustible/Calor) -->
                      
                <MudItem xs="12" md="6">
                    <MudPaper Elevation="4" Class="pa-4 bg-primario-claro">
                         <MudGrid>
                                    <MudItem md="3">
                                        <MudIcon Icon="@Icons.Material.Outlined.Circle" />
                             
                                    </MudItem>
                                    <MudItem md="9">
                                                <h4 class="m-0 h5  fw-bolder">Llantas</h4>
                                                <p class="fw-light">Traseras</p>
                                    </MudItem>
                             </MudGrid>
           <div class="text-center">

                        <MudProgressCircular Color="Color.Default" Size="Size.Medium" Value="@((double)@item.PorcentajeDesgasteLlanta3)" Class="mr-2" />

                        <MudProgressCircular Color="Color.Default" Size="Size.Medium" Value="@((double)@item.PorcentajeDesgasteLlanta4)" />
                                        <p class="m-0">Left @item.PorcentajeDesgasteLlanta3% | Right @item.PorcentajeDesgasteLlanta4%</p>
                             </div>
                    </MudPaper>
                </MudItem>


                        <!-- Tarjeta de Frenos (Combustible/Calor) -->

                        <MudItem xs="12" md="6">
                                    <MudPaper Elevation="4" Class="pa-4 bg-primario-claro">
                                 <MudGrid>
                                    <MudItem md="3">
                                <MudIcon Icon="@Icons.Material.Filled.Air" />
                                        
                                    </MudItem>
                                    <MudItem md="9">
                                                <h4 class="m-0 h5  fw-bolder">Filtros</h4>
                                                <p class="fw-light">Aire</p>
                                    </MudItem>
                             </MudGrid>
           <div class="text-center">

                                <MudProgressCircular Color="Color.Default" Size="Size.Medium" Value="@((double)@item.PorcentajeDesgasteFiltroCabina)" Class="mr-2" />

                                <MudProgressCircular Color="Color.Default" Size="Size.Medium" Value="@((double)@item.PorcentajeDesgasteFiltroMotor)" />
                                        <p class=" m-0">Cabina @item.PorcentajeDesgasteFiltroCabina% | Motor @item.PorcentajeDesgasteFiltroMotor%</p>
                             </div>
                            </MudPaper>
                        </MudItem>
    </MudGrid>

</MudContainer>

    </MudCardContent>
</MudCard>
            </MudCarouselItem>
}
    </MudCarousel>

}
else
{
    <MudProgressCircular Color="Color.Default" Indeterminate="true" />

}

</div>

    <div class="col-6">
        <div class="row mb-3">

            <MudCard>
                <MudCardHeader Class="pb-0">
                    <h4 class="m-0 h5  fw-bolder">Ingresos y egresos mensuales</h4>

                </MudCardHeader>
                <MudCardContent Class="p-0">

                    <canvas id="transaccionesChart" width="400"></canvas>

                   @* <h3>Gráfica de Transacciones Mensuales por Vehículo</h3>

                    <div class="mb-3">
                        <label class="form-label">Seleccione el Vehículo</label>
                        <select @bind="selectedVehiculoId" class="form-select">
                            @if (vehiculos != null)
                            {
                                @foreach (var vehiculo in vehiculos)
                                {
                                    <option value="@vehiculo.IdVehiculo">@vehiculo.Placa</option>
                                }
                            }
                        </select>
                    </div>*@
                </MudCardContent>
            </MudCard>
        </div>
            <div class="row">
                <div class="col-md-8  p-0">

                <MudCard Style="height:280px;" Class="overflow-auto">
                <MudCardHeader Class="pb-0">
                    <h4 class="m-0 h5  fw-bolder">Conductores en mora</h4>
                </MudCardHeader>
                <MudCardContent >


        @if (vehiculosDiario != null)
        {
            @foreach (var item in vehiculosDiario)
            { 
                    <MudGrid>
                        <MudItem sm="3">
                            @*<img src="@item.Imagen" class="img-fluid "/>*@
                                        <MudImage Src="@item.Imagen" Class="rounded-lg" Width="50" Height="50" ObjectFit="ObjectFit.Cover" />

                                    </MudItem>
                        <MudItem sm="9">
                            <h5>@item.Placa</h5>
                            <p>@item.Nombre</p>
                        </MudItem>

                    </MudGrid>
            }
        }
            </MudCardContent>
        </MudCard>
                </div>
                <div class="col-md-4">
                <div class="card" style="height:280px; background-image: url('/img/elegant-uber-driver-giving-taxi-ride.jpg'); background-size: cover;">

                    </div>
                </div>
            </div>
             
    </div>
</div>
 

            

@*<canvas id="transaccionesChartVehiculo" width="400" height="200"></canvas>*@

@code {
    private List<ObtenerTransaccionesResult> transacciones;
    private List<TransaccionesMensuales> transaccionesMensuales;
    private List<TransaccionesMensuales> transaccionesMensualesVehiculo;
    private List<Vehiculo> vehiculos;
    private int selectedVehiculoId;
    private List<ObtenerVehiculoInformacionDashboardResult> vehiculoInformacionDashboardResults = new List<ObtenerVehiculoInformacionDashboardResult>();


    //Carousel
    private bool arrows = true;
    private bool bullets = false;
    private bool enableSwipeGesture = true;
    private bool autocycle = false;
    private Transition transition = Transition.Slide;

    protected override async Task OnInitializedAsync()
    {


        vehiculoInformacionDashboardResults = await VehiculoService.VehiculoInformacionDashboardAsync();
        vehiculosDiario = await ComprobanteDiarioService.obtenervehiculossinexistenciahoy();

        //await Obtenervehiculos();
        
        //selectedVehiculoId = vehiculos.FirstOrDefault()?.IdVehiculo ?? 0;
        await UpdateGraficas();


    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (transaccionesMensuales != null)
        {
            await JS.InvokeVoidAsync("crearGraficaTransacciones", transaccionesMensuales);
            //await JS.InvokeVoidAsync("crearGraficaTransaccionesVehiculo", transaccionesMensualesVehiculo);
        }
    }
    private async Task UpdateGraficas()
    {
     
        transacciones = await transaccionesService.ObtenerTransaccionesAsync();
        vehiculos = transacciones.Select(t => new Vehiculo { IdVehiculo = t.IdVehiculo, Placa = t.Placa })
                                 .Distinct()
                                 .ToList();

    
        transaccionesMensuales = transacciones
            .GroupBy(t => t.FechaTransaccion.Month)
            .Select(g => new TransaccionesMensuales
                {
                    Mes = g.Key,
                    Gastos = g.Where(t => t.IdTipoTransaccion == 2).Sum(t => Math.Abs(t.TarifaDiaria)),
                    Ingresos = g.Where(t => t.IdTipoTransaccion == 1).Sum(t => t.TarifaDiaria)
                }).ToList();

        transaccionesMensualesVehiculo = transacciones
            .Where(t => t.IdVehiculo == selectedVehiculoId)
            .GroupBy(t => t.FechaTransaccion.Month)
            .Select(g => new TransaccionesMensuales
                {
                    Mes = g.Key,
                    Gastos = g.Where(t => t.IdTipoTransaccion == 2).Sum(t => Math.Abs(t.TarifaDiaria)),
                    Ingresos = g.Where(t => t.IdTipoTransaccion == 1).Sum(t => t.TarifaDiaria)
                }).ToList();
        }



    private async Task OnVehiculoChanged(ChangeEventArgs e)
    {
        if (int.TryParse(e.Value?.ToString(), out int selectedId))
        {
            selectedVehiculoId = selectedId;
            await UpdateGraficas();
            await JS.InvokeVoidAsync("crearGraficaTransaccionesVehiculo", transaccionesMensualesVehiculo);
        }
    }


    public class Vehiculo
    {
        public int IdVehiculo { get; set; }
        public string Placa { get; set; }
    }

    public class TransaccionesMensuales
    {
        public int Mes { get; set; }
        public int Gastos { get; set; }
        public int Ingresos { get; set; }
    }

    //fin graficas
    private List<ObtenerVehiculosSinExistenciaHoyResult> vehiculosDiario;

}
