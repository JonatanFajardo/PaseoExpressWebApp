@page "/"
@layout LoginLayout

@inject HttpClient httpClient
@using PaseoExpressWebApp.Extensiones
@using PaseoExpressWebApp.Models
@using Microsoft.AspNetCore.Components.Authorization
@using PaseoExpressWebApp.Services
@inject AuthenticationStateProvider autenticacionProvider
@inject NavigationManager navManager
@inject IJSRuntime JSRuntime
@inject ISnackbar Snackbar
@inject AuthService AuthService

<EditForm Model="login" OnValidSubmit="IniciarSesion">
    <div class="container-fluid vh-100">
        <div class="row h-100">
            <div class="col-md-8 p-0 " style="height: 100vh;">
                <div class="rounded-right p-5" style="background-image: url('/img/login/driver-dressed-elegant-costume-min.jpg');
                        background-size: cover;
                        background-position: center;
                        height: 100vh;">
                </div>
            </div>
            
            <div class="col-md-4 p-5 login-container d-flex flex-column justify-content-center">
                <div class="brand-name">Paseo Express</div>
                <div class="welcome-message">
                    <h4>Hola, Bienvenido nuevamente</h4>
                    <p>Oye, bienvenido de nuevo a tu lugar especial.</p>
                </div>

                <div class="mb-3">
                    <label for="email" class="form-label">Usuario</label>
                    <InputText @bind-Value="login.Usuario" class="form-control" id="email" placeholder="Scarlett, James, Sophia" />
                </div>
                <div class="mb-3">
                    <label for="password" class="form-label">Password</label>
                    <InputText @bind-Value="login.Clave" type="password" class="form-control" id="password"  />
                </div>
                @*<div class="mb-3 form-check">
                    <input type="checkbox" class="form-check-input" id="rememberMe">
                    <label class="form-check-label" for="rememberMe">Remember me</label>
                    <a href="#" class="float-end">Forgot Password?</a>
                </div>*@


                @if (@warning == true)
                {
                    <small class="d-inline-flex mb-3 px-2 py-1 fw-semibold bg-danger text-white bg-success-subtle border border-success-subtle rounded-2">@warningMessage</small>
                }

                <button type="submit" @onkeydown="@Enter" class="btn btn-primary bg-primario-oscuro">
                    <span>Iniciar Sesión</span>

                    @if (isLoading)
                    {
                        <div class="spinner-border spinner-border-sm mx-2" role="status">
                        </div>
                    }

                </button>
                    
                <div class="signup-link">
                    <p>De ser necesario cambiar la contraseña o crear un usuario puedes ponerte en contacto con el administrador.</p>
                    @*Don't have an account? <a href="#">Sign Up</a>*@
                    @*Don't have an account? <a href="#">Sign Up</a>*@
                </div>
            </div>

            <!-- Div con imagen a pantalla completa -->
        </div>
    </div>

</EditForm>


@code {


    private LoginDto login = new LoginDto();
    private bool isLoading = false;
    private bool warning = false;
    private string warningMessage = string.Empty;

    public void Enter(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            IniciarSesion();
        }
    }

    private async Task IniciarSesion()
    {
        try
        {
            isLoading = true; // Mostrar el loading
            StateHasChanged(); // Actualización inmediata de la UI

            //obteniendo informacion del usuario y validandolo.
            var sesionUsuario = await AuthService.Login(login);

            if (sesionUsuario.Success == false)
            {
                warning = true;
                warningMessage = sesionUsuario.ErrorMessage;
                isLoading = false; 
                return;
            } 

            // Verificar si los datos del usuario son válidos
            if (sesionUsuario != null)
            {
                // Si los datos son válidos, actualizar el estado de autenticación
                var autenticacionExt = (AutenticacionExtension)autenticacionProvider;
                await autenticacionExt.ActualizarEstadoAutenticacion(sesionUsuario.Data);

                // Redirigir al inicio después de un login exitoso
                isLoading = false;
                navManager.NavigateTo("/Inicio");
            }
            else
            {
                // Si no se encuentra un usuario válido, muestra un mensaje
                Console.WriteLine("Datos de usuario inválidos.");
            }
        }
        catch (HttpRequestException e)
        {
            Snackbar.Add("Ocurrio un problema al ingresar.", Severity.Error);
            isLoading = false;

        }
    }
}
